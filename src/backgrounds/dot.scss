@use "sass:map";
@use "../variables/index.scss" as variables;
@use "../mixins/index.scss" as mixins;

.dot {
  --#{variables.$prefix}dot-size: 20%;
  @include mixins.element();
  background-color: var(--#{variables.$prefix}color-default-dot-back);
  background-image: radial-gradient(
      oklch(var(--#{variables.$prefix}color-default-dot-fore-oklch) / 0.5)
        var(--#{variables.$prefix}dot-size),
      transparent calc(var(--#{variables.$prefix}dot-size) + 3%)
    ),
    radial-gradient(
      oklch(var(--#{variables.$prefix}color-default-dot-fore-oklch) / 0.5)
        var(--#{variables.$prefix}dot-size),
      transparent calc(var(--#{variables.$prefix}dot-size) + 3%)
    );
  background-position: 0 0, 1rem 1rem;
  background-repeat: repeat;
  background-size: 2rem 2rem;
  &.is-coin {
    --#{variables.$prefix}dot-size: 30%;
  }
  &.is-polka {
    --#{variables.$prefix}dot-size: 20%;
  }
  &.is-pin {
    --#{variables.$prefix}dot-size: 10%;
  }

  @if (not variables.$is-skelton) {
    @each $color in variables.$colors {
      $colorName: map.get($color, "name");
      &.is-#{$colorName} {
        background-color: var(--#{variables.$prefix}color-#{$colorName}-dot-back);
        background-image: radial-gradient(
            oklch(var(--#{variables.$prefix}color-#{$colorName}-dot-fore-oklch) / 0.5)
              var(--#{variables.$prefix}dot-size),
            transparent calc(var(--#{variables.$prefix}dot-size) + 3%)
          ),
          radial-gradient(
            oklch(var(--#{variables.$prefix}color-#{$colorName}-dot-fore-oklch) / 0.5)
              var(--#{variables.$prefix}dot-size),
            transparent calc(var(--#{variables.$prefix}dot-size) + 3%)
          );
      }
    }
  }
}
