@use "sass:map";
@use "../variables/index.scss" as variables;
@use "../icons/index.scss" as icons;

.accordion {
  color: var(--#{variables.$prefix}color-default-accordion-fore);
  background-color: var(--#{variables.$prefix}color-default-accordion-back);
  border-color: var(--#{variables.$prefix}color-default-accordion-border);
  border-radius: calc(
    var(--#{variables.$prefix}border-radius-medium) +
      var(--#{variables.$prefix}border-width-thin)
  );
  border-style: solid;
  border-width: var(--#{variables.$prefix}border-width-thin);
  border-collapse: collapse;
  >.accordion-summary {
    background-color: var(
      --#{variables.$prefix}color-default-accordion-summary-back
    );
    border-color: var(
      --#{variables.$prefix}color-default-accordion-summary-border
    );
    border-radius: calc(
      var(--#{variables.$prefix}border-radius-medium)
    );
    cursor: pointer;
    display: block;
    padding: 1rem;
    position: relative;
    list-style: none;
    &::marker,
    &::-webkit-details-marker {
      display: none;
    }
    &::after {
      @include icons.chevron() {
        content: "";
        right: 1rem;
        position: absolute;
        top: calc(50% - 0.25rem);
      }
    }
    &:focus,
    &.is-focus,
    &.is-focused {
      background-color: var(
        --#{variables.$prefix}color-default-accordion-summary-focus-back
      );
      border-color: var(
        --#{variables.$prefix}color-default-accordion-summary-focus-border
      );
    }
    &:hover,
    &.is-hovered,
    &.is-hovered {
      background-color: var(
        --#{variables.$prefix}color-default-accordion-summary-hover-back
      );
      border-color: var(
        --#{variables.$prefix}color-default-accordion-summary-hover-border
      );
    }
    &:active,
    &.is-active {
      background-color: var(
        --#{variables.$prefix}color-default-accordion-summary-active-back
      );
      border-color: var(
        --#{variables.$prefix}color-default-accordion-summary-active-border
      );
    }
    &[disabled],
    fieldset[disabled],
    &.is-disabled {
      background-color: var(
        --#{variables.$prefix}color-default-accordion-summary-disabled-back
      );
      border-color: var(
        --#{variables.$prefix}color-default-accordion-summary-disabled-border
      );
    }
  }
  >.accordion-details {
    border-color: var(--#{variables.$prefix}color-gray-border);
    height: 0;
    display: none;
    padding: 1rem;
    border-radius: 0 0 var(--#{variables.$prefix}border-radius-medium) var(--#{variables.$prefix}border-radius-medium);
  }
  &[open],
  is-open {
    >.accordion-summary {
      border-radius: var(--#{variables.$prefix}border-radius-medium) var(--#{variables.$prefix}border-radius-medium) 0 0;
      &:after {
        transform: rotate(180deg);
      }
    }
    >.accordion-details {
      display: block;
      height: auto;
    }
  }
  @if (not variables.$is-skelton) {
    @each $color in variables.$colors {
      $colorName: map.get($color, "name");
      &.is-#{$colorName} {
        color: var(--#{variables.$prefix}color-#{$colorName}-accordion-fore);
        background-color: var(
          --#{variables.$prefix}color-#{$colorName}-accordion-back
        );
        border-color: var(
          --#{variables.$prefix}color-#{$colorName}-accordion-border
        );
        >.accordion-summary {
          background-color: var(
            --#{variables.$prefix}color-#{$colorName}-accordion-summary-back
          );
          border-color: var(
            --#{variables.$prefix}color-#{$colorName}-accordion-summary-border
          );
          &:after {
            background: var(
              --#{variables.$prefix}color-#{$colorName}-accordion-fore
            );
          }
          &:focus,
          &.is-focus,
          &.is-focused {
            background-color: var(
              --#{variables.$prefix}color-#{$colorName}-accordion-summary-focus-back
            );
            border-color: var(
              --#{variables.$prefix}color-#{$colorName}-accordion-summary-focus-border
            );
          }
          &:hover,
          &.is-hovered,
          &.is-hovered {
            background-color: var(
              --#{variables.$prefix}color-#{$colorName}-accordion-summary-hover-back
            );
            border-color: var(
              --#{variables.$prefix}color-#{$colorName}-accordion-summary-hover-border
            );
          }
          &:active,
          &.is-active {
            background-color: var(
              --#{variables.$prefix}color-#{$colorName}-accordion-summary-active-back
            );
            border-color: var(
              --#{variables.$prefix}color-#{$colorName}-accordion-summary-active-border
            );
          }
          &[disabled],
          fieldset[disabled],
          &.is-disabled {
            background-color: var(
              --#{variables.$prefix}color-#{$colorName}-accordion-summary-disabled-back
            );
            border-color: var(
              --#{variables.$prefix}color-#{$colorName}-accordion-summary-disabled-border
            );
          }
        }
        >.accordion-details {
          border-color: var(
            --#{variables.$prefix}color-#{$colorName}-accordion-summary-border
          );
        }
      }
    }
  }
}
